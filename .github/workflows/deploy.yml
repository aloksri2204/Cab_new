name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create build directory
        run: mkdir -p build
        
      - name: Copy website files
        run: |
          cp index.html build/
          cp -r css build/
          cp -r images build/
          mkdir -p build/js
          cp js/script.js build/js/
          
          # Copy test diagnostic files
          if [ -f "github-pages-test.html" ]; then
            cp github-pages-test.html build/
            echo "✓ Copied GitHub Pages test file"
          fi
          
          # Copy README and documentation
          if [ -f "README.md" ]; then
            cp README.md build/
          fi
      
      - name: Create config.js with Google Maps API key from secrets
        run: |
          echo "// Configuration file for AkhileshCab website" > build/js/config.js
          echo "// Generated during deployment - $(date)" >> build/js/config.js
          echo "const CONFIG = {" >> build/js/config.js
          echo "  GOOGLE_MAPS_API_KEY: \"${{ secrets.GOOGLE_MAPS_API_KEY }}\"," >> build/js/config.js
          echo "  WEBSITE_VERSION: \"1.0.0-$(date +%s)\"" >> build/js/config.js
          echo "};" >> build/js/config.js
          echo "✓ Successfully created config.js with Google Maps API key from GitHub secrets"
      
      - name: Copy CNAME if exists
        run: |
          if [ -f "CNAME" ]; then
            cp CNAME build/
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1